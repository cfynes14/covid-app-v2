{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\cpfyn\\\\Documents\\\\Coding\\\\Projects\\\\covid-app\\\\covid-19\\\\client\\\\src\\\\Components\\\\CurrentInfo\\\\currentInfo.js\";\nimport React from 'react';\nimport './currentInfo.css';\nimport axios from 'axios';\nimport Total from '../../utils/totals';\n\nvar CurrentInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(CurrentInfo, _React$Component);\n\n  var _super = _createSuper(CurrentInfo);\n\n  function CurrentInfo(props) {\n    var _this;\n\n    _classCallCheck(this, CurrentInfo);\n\n    _this = _super.call(this, props);\n    _this.findTotal = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('http://localhost:5000/national');\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(response.message);\n\n            case 8:\n              _this.setState({\n                totalDeaths: response.data.data[0].deathsCumulative,\n                totalInfections: response.data.data.casesCumulative,\n                newInfections: response.data.data[0].casesDaily,\n                newDeaths: response.data.data[0].deathsDaily\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      totalInfections: 0,\n      totalDeaths: 0,\n      newCases: 0,\n      newDeaths: 0\n    };\n    _this.findTotal = _this.findTotal.bind(_assertThisInitialized(_this));\n    return _this;\n  } // searchLocation = async (location) => {\n  //     console.log(location)\n  //     const response = await axios.get('http://localhost:5000/location', { params: {location} })\n  //     console.log(response)\n  //     if (response.status !== 200){\n  //         throw Error(response.message)\n  //     } else {\n  //         this.setState({ geoJson: response.data.geoJson, key: response.data.key })\n  //     }\n  //   }\n\n\n  _createClass(CurrentInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.onload = this.findTotal();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pr-4 pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total infections in UK: \", this.state.totalInfections]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total deaths in UK: \", this.state.totalDeaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New infections today: \", this.state.newInfections, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New deaths today: \", this.state.newDeaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return CurrentInfo;\n}(React.Component);\n\nexport default CurrentInfo;","map":{"version":3,"sources":["C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/src/Components/CurrentInfo/currentInfo.js"],"names":["React","axios","Total","CurrentInfo","props","findTotal","get","response","console","log","status","Error","message","setState","totalDeaths","data","deathsCumulative","totalInfections","casesCumulative","newInfections","casesDaily","newDeaths","deathsDaily","state","newCases","bind","window","onload","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AADc,UAwBlBC,SAxBkB,yEAwBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeJ,KAAK,CAACK,GAAN,CAAU,gCAAV,CADf;;AAAA;AACFC,cAAAA,QADE;AAERC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFQ,oBAGJA,QAAQ,CAACG,MAAT,KAAoB,GAHhB;AAAA;AAAA;AAAA;;AAAA,oBAIEC,KAAK,CAACJ,QAAQ,CAACK,OAAV,CAJP;;AAAA;AAMJ,oBAAKC,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAEP,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBC,gBAArC;AAAuDC,gBAAAA,eAAe,EAAEV,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmBG,eAA3F;AAA4GC,gBAAAA,aAAa,EAAEZ,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBK,UAAjJ;AAA6JC,gBAAAA,SAAS,EAAEd,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBO;AAA9L,eAAd;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxBM;AAEd,UAAKC,KAAL,GAAa;AACTN,MAAAA,eAAe,EAAE,CADR;AAETH,MAAAA,WAAW,EAAE,CAFJ;AAGTU,MAAAA,QAAQ,EAAE,CAHD;AAITH,MAAAA,SAAS,EAAE;AAJF,KAAb;AAMA,UAAKhB,SAAL,GAAiB,MAAKA,SAAL,CAAeoB,IAAf,+BAAjB;AARc;AAUjB,G,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;wCAmBoB;AAChBC,MAAAA,MAAM,CAACC,MAAP,GAAgB,KAAKtB,SAAL,EAAhB;AACH;;;6BAGO;AACJ,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,iDAA4B,KAAKkB,KAAL,CAAWN,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,6CAAwB,KAAKM,KAAL,CAAWT,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,+CAA0B,KAAKS,KAAL,CAAWJ,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,2CAAsB,KAAKI,KAAL,CAAWF,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;;;;EAxDqBrB,KAAK,CAAC4B,S;;AA4DhC,eAAezB,WAAf","sourcesContent":["import React from 'react';\r\nimport './currentInfo.css';\r\nimport axios from 'axios';\r\nimport Total from '../../utils/totals';\r\n\r\nclass CurrentInfo extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            totalInfections: 0,\r\n            totalDeaths: 0,\r\n            newCases: 0,\r\n            newDeaths: 0\r\n        }\r\n        this.findTotal = this.findTotal.bind(this)\r\n        \r\n    }\r\n\r\n    // searchLocation = async (location) => {\r\n    //     console.log(location)\r\n\r\n    //     const response = await axios.get('http://localhost:5000/location', { params: {location} })\r\n    //     console.log(response)\r\n    //     if (response.status !== 200){\r\n    //         throw Error(response.message)\r\n    //     } else {\r\n    //         this.setState({ geoJson: response.data.geoJson, key: response.data.key })\r\n    //     }\r\n    //   }\r\n\r\n    findTotal = async () => {\r\n        const response = await axios.get('http://localhost:5000/national')\r\n        console.log(response)\r\n        if (response.status !== 200){\r\n            throw Error(response.message)\r\n        } else {\r\n            this.setState({ totalDeaths: response.data.data[0].deathsCumulative, totalInfections: response.data.data.casesCumulative, newInfections: response.data.data[0].casesDaily, newDeaths: response.data.data[0].deathsDaily })\r\n        }\r\n\r\n        // Total.search().then(data => {\r\n        //     this.setState({\r\n        //         currentInfections: data.totalInfections,\r\n        //         currentDeaths: data.totalDeaths\r\n        // })\r\n        // })\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onload = this.findTotal()\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"pr-4 pt-2\">\r\n                <p>Total infections in UK: {this.state.totalInfections}</p>\r\n                <p>Total deaths in UK: {this.state.totalDeaths}</p>\r\n                <p>New infections today: {this.state.newInfections} </p>\r\n                <p>New deaths today: {this.state.newDeaths}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CurrentInfo;"]},"metadata":{},"sourceType":"module"}