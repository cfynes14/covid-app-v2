{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\cpfyn\\\\Documents\\\\Coding\\\\Projects\\\\covid-app\\\\covid-19\\\\client\\\\src\\\\Components\\\\CurrentInfo\\\\currentInfo.js\";\nimport React from 'react';\nimport './currentInfo.css';\nimport axios from 'axios';\nimport CountUp from 'react-countup';\nimport Dashboard from '../Modal/dashboard';\n\nvar CurrentInfo = /*#__PURE__*/function (_React$Component) {\n  _inherits(CurrentInfo, _React$Component);\n\n  var _super = _createSuper(CurrentInfo);\n\n  function CurrentInfo(props) {\n    var _this;\n\n    _classCallCheck(this, CurrentInfo);\n\n    _this = _super.call(this, props);\n    _this.findTotal = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('http://localhost:5000/national');\n\n            case 2:\n              response = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 7;\n                break;\n              }\n\n              throw Error(response.message);\n\n            case 7:\n              console.log(response);\n\n              _this.setState({\n                totalDeaths: response.data.data[0].deathsCumulative,\n                totalInfections: response.data.data[0].casesCumulative,\n                newCases: response.data.data[0].casesDaily,\n                newDeaths: response.data.data[0].deathsDaily\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      totalInfections: 0,\n      totalDeaths: 0,\n      newCases: 0,\n      newDeaths: 0,\n      countup: 0\n    };\n    _this.findTotal = _this.findTotal.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CurrentInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.onload = this.findTotal();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pr-4 pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total infections in UK: \", /*#__PURE__*/_jsxDEV(CountUp, {\n            end: this.state.totalInfections,\n            duration: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total deaths in UK: \", /*#__PURE__*/_jsxDEV(CountUp, {\n            end: this.state.totalDeaths,\n            duration: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New infections: \", /*#__PURE__*/_jsxDEV(CountUp, {\n            end: this.state.newCases,\n            duration: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 36\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New deaths: \", /*#__PURE__*/_jsxDEV(CountUp, {\n            end: this.state.newDeaths,\n            duration: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return CurrentInfo;\n}(React.Component);\n\nexport default CurrentInfo;","map":{"version":3,"sources":["C:/Users/cpfyn/Documents/Coding/Projects/covid-app/covid-19/client/src/Components/CurrentInfo/currentInfo.js"],"names":["React","axios","CountUp","Dashboard","CurrentInfo","props","findTotal","get","response","status","Error","message","console","log","setState","totalDeaths","data","deathsCumulative","totalInfections","casesCumulative","newCases","casesDaily","newDeaths","deathsDaily","state","countup","bind","window","onload","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AADc,UAclBC,SAdkB,yEAcN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeL,KAAK,CAACM,GAAN,CAAU,gCAAV,CADf;;AAAA;AACFC,cAAAA,QADE;;AAAA,oBAEJA,QAAQ,CAACC,MAAT,KAAoB,GAFhB;AAAA;AAAA;AAAA;;AAAA,oBAGEC,KAAK,CAACF,QAAQ,CAACG,OAAV,CAHP;;AAAA;AAKJC,cAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,oBAAKM,QAAL,CAAc;AAAEC,gBAAAA,WAAW,EAAEP,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBC,gBAArC;AAAuDC,gBAAAA,eAAe,EAAEV,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBG,eAA9F;AAA+GC,gBAAAA,QAAQ,EAAEZ,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBK,UAA/I;AAA2JC,gBAAAA,SAAS,EAAEd,QAAQ,CAACQ,IAAT,CAAcA,IAAd,CAAmB,CAAnB,EAAsBO;AAA5L,eAAd;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdM;AAEd,UAAKC,KAAL,GAAa;AACTN,MAAAA,eAAe,EAAE,CADR;AAETH,MAAAA,WAAW,EAAE,CAFJ;AAGTK,MAAAA,QAAQ,EAAE,CAHD;AAITE,MAAAA,SAAS,EAAE,CAJF;AAKTG,MAAAA,OAAO,EAAE;AALA,KAAb;AAOA,UAAKnB,SAAL,GAAiB,MAAKA,SAAL,CAAeoB,IAAf,+BAAjB;AATc;AAWjB;;;;wCAamB;AAChBC,MAAAA,MAAM,CAACC,MAAP,GAAgB,KAAKtB,SAAL,EAAhB;AACH;;;6BAEO;AACJ,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,8DAA2B,QAAC,OAAD;AAAS,YAAA,GAAG,EAAE,KAAKkB,KAAL,CAAWN,eAAzB;AAA0C,YAAA,QAAQ,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,0DAAuB,QAAC,OAAD;AAAS,YAAA,GAAG,EAAE,KAAKM,KAAL,CAAWT,WAAzB;AAAsC,YAAA,QAAQ,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,sDAAmB,QAAC,OAAD;AAAS,YAAA,GAAG,EAAE,KAAKS,KAAL,CAAWJ,QAAzB;AAAmC,YAAA,QAAQ,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,kDAAe,QAAC,OAAD;AAAS,YAAA,GAAG,EAAE,KAAKI,KAAL,CAAWF,SAAzB;AAAoC,YAAA,QAAQ,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;;;;EAtCqBtB,KAAK,CAAC6B,S;;AA0ChC,eAAezB,WAAf","sourcesContent":["import React from 'react';\r\nimport './currentInfo.css';\r\nimport axios from 'axios';\r\nimport CountUp from 'react-countup';\r\nimport Dashboard from '../Modal/dashboard';\r\n\r\nclass CurrentInfo extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            totalInfections: 0,\r\n            totalDeaths: 0,\r\n            newCases: 0,\r\n            newDeaths: 0,\r\n            countup: 0\r\n        }\r\n        this.findTotal = this.findTotal.bind(this)\r\n        \r\n    }\r\n\r\n\r\n    findTotal = async () => {\r\n        const response = await axios.get('http://localhost:5000/national')\r\n        if (response.status !== 200){\r\n            throw Error(response.message)\r\n        } else {\r\n            console.log(response)\r\n            this.setState({ totalDeaths: response.data.data[0].deathsCumulative, totalInfections: response.data.data[0].casesCumulative, newCases: response.data.data[0].casesDaily, newDeaths: response.data.data[0].deathsDaily})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onload = this.findTotal()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"pr-4 pt-2\">\r\n                <p>Total infections in UK: <CountUp end={this.state.totalInfections} duration={0.5}/></p>\r\n                <p>Total deaths in UK: <CountUp end={this.state.totalDeaths} duration={0.5}/></p>\r\n                <p>New infections: <CountUp end={this.state.newCases} duration={0.5}/> </p>\r\n                <p>New deaths: <CountUp end={this.state.newDeaths} duration={0.5}/></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CurrentInfo;"]},"metadata":{},"sourceType":"module"}